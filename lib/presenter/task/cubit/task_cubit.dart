import 'package:bloc/bloc.dart';import 'package:flutter_bloc_app/data/rest_client.dart';import 'package:freezed_annotation/freezed_annotation.dart';import '../../../domain/entities/task.dart';part 'task_state.dart';part 'task_cubit.freezed.dart';class TaskCubit extends Cubit<TaskState> {  TaskCubit(this._client) : super(const TaskState.loading())  {    getTasks();  }  final RestClient _client;  Future<void> getTasks() async {    emit(const TaskState.loading());    try {      final _list = await _client.getTasks();      emit(TaskState.loaded(_list));    } catch (e) {      emit(TaskState.error(e));    }  }}